// This is a representative version of the C++ header file generated by ROS 2 from the RpiSensorData.msg definition.
// It defines the struct used by C++ nodes for publishing and subscribing.

#ifndef RPI_CPP_HARDWARE__MSG__RPI_SENSOR_DATA__HPP_
#define RPI_CPP_HARDWARE__MSG__RPI_SENSOR_DATA__HPP_

// Standard ROS 2 includes for message type support
#include <rosidl_runtime_cpp/message_type_support_decl.hpp>
#include <rosidl_runtime_cpp/message_initialization.hpp>
#include <rosidl_typesupport_cpp/message_type_support.hpp>

// Include the header for the nested message type (std_msgs/Header)
#include "std_msgs/msg/header.hpp"

namespace rpi_cpp_hardware
{
namespace msg
{
/**
 * \brief C++ structure corresponding to the RpiSensorData.msg definition.
 */
struct RpiSensorData
{
  using Type = RpiSensorData;

  // Constructor with default initialization (e.g., setting numeric fields to zero)
  explicit RpiSensorData(rosidl_runtime_cpp::MessageInitialization _init = rosidl_runtime_cpp::MessageInitialization::ZERO)
  : header(_init) // Initialize the nested Header message
  {}

  // --- Message members, following the order in RpiSensorData.msg ---

  // std_msgs/Header header
  std_msgs::msg::Header header;
  
  // float64 us1_distance_cm
  double us1_distance_cm;
  
  // float64 us4_distance_cm
  double us4_distance_cm;
  
  // int32 soil_moisture_adc
  int32_t soil_moisture_adc;
  
  // float64 air_temperature_celsius
  double air_temperature_celsius;

  // Optional: Comparison operators (often generated for convenience)
  bool operator==(const RpiSensorData & other) const
  {
    return
      this->header == other.header &&
      this->us1_distance_cm == other.us1_distance_cm &&
      this->us4_distance_cm == other.us4_distance_cm &&
      this->soil_moisture_adc == other.soil_moisture_adc &&
      this->air_temperature_celsius == other.air_temperature_celsius;
  }

  bool operator!=(const RpiSensorData & other) const
  {
    return !(*this == other);
  }
};

}  // namespace msg
}  // namespace rpi_cpp_hardware

// Include the necessary type support macro
#include "rosidl_typesupport_cpp/message_type_support_decl.hpp"

#endif  // RPI_CPP_HARDWARE__MSG__RPI_SENSOR_DATA__HPP_
